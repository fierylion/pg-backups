name: Build and Publish Docker Image

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        pg_version:
          - '17-alpine'
        image_type:
          - 'backup'
          - 'restore'
          - 'restore-test'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine image name suffix
        id: image_name
        run: |
          if [ "${{ matrix.image_type }}" = "restore" ]; then
            echo "suffix=-restore" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.image_type }}" = "restore-test" ]; then
            echo "suffix=-restore-test" >> $GITHUB_OUTPUT
          else
            echo "suffix=" >> $GITHUB_OUTPUT
          fi

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}${{ steps.image_name.outputs.suffix }}
          tags: |
            type=raw,value=${{ matrix.pg_version }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.${{ matrix.image_type }}-${{ matrix.pg_version }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.image_type }}-${{ matrix.pg_version }}
          cache-to: type=gha,mode=max,scope=${{ matrix.image_type }}-${{ matrix.pg_version }}

